{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js"],"names":[],"mappings":"AAAA,QAAA,QAAA,GAAA,EAAA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,GAAA,kBAAA,UAAA,OAAA,KAAA,GAAA,EAAA,MAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,GAAA,GAAA,EAAA,IAAA,GAAA,GAAA,OAAA,uBAAA,EAAA,IAAA,MAAA,GAAA,KAAA,mBAAA,EAAA,GAAA,GAAA,EAAA,IAAA,WAAA,GAAA,GAAA,GAAA,KAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,GAAA,QAAA,IAAA,GAAA,GAAA,kBAAA,UAAA,QAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,OAAA,KAAA,MAAA,SAAA,EAAA,GCAA,YAiBA,SAAA,GAAA,GAQA,GAPA,KAAA,OAAA,EAAA,OACA,KAAA,KAAA,EAAA,KACA,KAAA,OAAA,EACA,KAAA,SACA,KAAA,UAAA,EACA,KAAA,cAEA,KAAA,SAAA,KAAA,KACA,KAAA,IAAA,OAAA,6EAGA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EACA,KAAA,EAAA,IAAA,KAAA,cAAA,KAAA,KAAA,EAAA,KAGA,mBAAA,GAAA,MAAA,EAAA,OACA,KAAA,OAhCA,EAAA,QAAA,CAEA,IAAA,GAAA,QAGA,GACA,QACA,UACA,MACA,OACA,SACA,aACA,UAwBA,GAAA,UAAA,KAAA,WACA,GAAA,GAAA,IAEA,KAAA,EAAA,QAAA,CAIA,IAAA,OAAA,cAAA,OAAA,KACA,KAAA,IAAA,OAAA,mDAGA,GAAA,QAAA,SAAA,cAAA,UACA,EAAA,QAAA,GAAA,OACA,EAAA,QAAA,MAAA,QAAA,wCACA,SAAA,KAAA,YAAA,EAAA,QAEA,IAAA,GAAA,EAAA,UAAA,KAAA,GACA,EAAA,EAAA,WAAA,KAAA,EAEA,IAAA,OAAA,iBACA,EAAA,QAAA,iBAAA,OAAA,GAAA,GACA,OAAA,iBAAA,UAAA,GAAA,OAEA,CAAA,IAAA,EAAA,QAAA,YAKA,KAAA,IAAA,OAAA,mDAJA,GAAA,QAAA,YAAA,SAAA,GAAA,GACA,OAAA,YAAA,YAAA,GAMA,EAAA,QAAA,IAAA,EAAA,OAAA,EAAA,OAGA,EAAA,UAAA,UAAA,WACA,GAAA,GAAA,IAEA,GAAA,OAAA,CAGA,KADA,GAAA,GACA,EAAA,EAAA,MAAA,SACA,EAAA,aAAA,IAIA,EAAA,UAAA,cAAA,WACA,GAAA,GAAA,KACA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GACA,EAAA,EAAA,QACA,EAAA,IAEA,GAAA,OAEA,EAAA,QAAA,kBAAA,GAAA,EAAA,OAAA,KACA,EAAA,EAAA,MAGA,IAAA,KAAA,EAAA,SAEA,KACA,EAAA,UAAA,GAAA,EAGA,IAAA,IACA,GAAA,EACA,OAAA,EACA,UAAA,EAGA,GAAA,MACA,EAAA,aAAA,GAGA,EAAA,MAAA,KAAA,IAIA,EAAA,UAAA,aAAA,SAAA,GACA,GAAA,GAAA,IACA,GAAA,QAAA,cAAA,YAAA,EAAA,KAAA,UAAA,GAAA,EAAA,SAGA,EAAA,UAAA,WAAA,SAAA,GACA,GAAA,GAAA,IAEA,IAAA,EAAA,QAAA,KAAA,EAAA,OAAA,QAAA,EAAA,SAAA,EAAA,MAAA,IAAA,EAAA,KAAA,QAAA,GAAA,CAIA,GAAA,GAAA,KAAA,MAAA,EAAA,KAAA,UAAA,EAAA,QAEA,GAAA,UAAA,EAAA,MACA,EAAA,MACA,EAAA,UAAA,EAAA,IAAA,GAGA,EAAA,UAAA,EAAA,IAAA,KAAA,EAAA,cAGA,GAAA,UAAA,EAAA","file":"xdls-0.0.1.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nmodule.exports = XDLS;\n\nvar PREFIX = 'xdls:';\n\n// must match localforage\nvar METHODS = [\n    'clear',\n    'getItem',\n    'key',\n    'keys',\n    'length',\n    'removeItem',\n    'setItem'  \n];\n\nfunction XDLS( options ) {\n    this.origin = options.origin;\n    this.path = options.path;\n    this.ready = false;\n    this.queue = [];\n    this.messageId = 0;\n    this.callbacks = {};\n    \n    if ( !( this.origin && this.path ) ) {\n        throw new Error( 'XDLS needs both an origin and a path specified in the constructor options.' );\n    }\n    \n    for ( var i = 0; i < METHODS.length; ++i ) {\n        this[ METHODS[ i ] ] = this._handleMethod.bind( this, METHODS[ i ] );\n    }\n    \n    if ( typeof( options.init ) === 'undefined' || options.init ) {\n        this.init();\n    }\n}\n\nXDLS.prototype.init = function() {\n    var self = this;\n    \n    if ( self._iframe ) {\n        return;\n    }\n    \n    if ( !( window.postMessage && window.JSON ) ) {\n        throw new Error( 'XDLS requires both postMossage and JSON support.' );\n    }\n\n    self._iframe = document.createElement( 'iframe' );\n    self._iframe.id = 'xdls';\n    self._iframe.style.cssText = \"width:1px; height:1px; display: none;\";\n    document.body.appendChild( self._iframe );\n\n    var onLoaded = self._onLoaded.bind( self );\n    var onMessage = self._onMessage.bind( self );\n\n    if ( window.addEventListener ) {\n        self._iframe.addEventListener( 'load', onLoaded, false );\n        window.addEventListener( 'message', onMessage, false );\n    }\n    else if ( self._iframe.attachEvent ) {\n        self._iframe.attachEvent( 'onload', onLoaded, false);\n        window.attachEvent( 'onmessage', onMessage );\n    }\n    else {\n        throw new Error( 'XDLS could not properly bind for event handling.' );\n    }\n\n    self._iframe.src = self.origin + self.path;\n};\n\nXDLS.prototype._onLoaded = function() {\n    var self = this;\n    \n    self.ready = true;\n    \n    var message;\n    while ( ( message = self.queue.shift() ) ) {\n        self._sendMessage( message );\n    }\n};\n\nXDLS.prototype._handleMethod = function() {\n    var self = this;\n    var _args = Array.prototype.slice.call( arguments, 0 ); // convert arguments to an array\n    var method = _args.shift();\n    var callback = null;\n    \n    self.init();\n    \n    if ( _args.length && typeof( _args[ _args.length - 1 ] ) === 'function' ) {\n        callback = _args.pop();\n    }\n\n    var id = ++self.messageId;\n    \n    if ( callback ) {\n        self.callbacks[ id ] = callback;\n    }\n\n    var message = {\n        id: id,\n        method: method,\n        arguments: _args\n    };\n    \n    if ( self.ready ) {\n        self._sendMessage( message );\n    }\n    else {\n        self.queue.push( message );\n    }\n};\n\nXDLS.prototype._sendMessage = function( message ) {\n    var self = this;\n    self._iframe.contentWindow.postMessage( PREFIX + JSON.stringify( message ), self.origin );\n};\n\nXDLS.prototype._onMessage = function( event ) {\n    var self = this;\n    \n    if ( ( !event.origin || self.origin.indexOf( event.origin ) === -1 ) || ( !event.data || event.data.indexOf( PREFIX ) !== 0 ) ) {\n        return;\n    }\n    \n    var data = JSON.parse( event.data.substring( PREFIX.length ) );\n    \n    if ( self.callbacks[ data.id ] ) {\n        if ( data.error ) {\n            self.callbacks[ data.id ]( data );\n        }\n        else {\n            self.callbacks[ data.id ]( null, data.result );\n        }\n\n        delete self.callbacks[ data.id ];\n    }\n};\n"],"sourceRoot":"/source/"}